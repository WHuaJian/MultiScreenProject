package com.whj.multiscreenproject;import android.graphics.Bitmap;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.disposables.Disposable;import io.reactivex.functions.Consumer;import io.reactivex.processors.PublishProcessor;import io.reactivex.schedulers.Schedulers;/** * author : William * github : WHuaJian * date   : 2020-01-1015:23 * desc   : */public class UdpReceiverSubject {    public static PublishProcessor<Bitmap> mPublishSubject;    public static PublishProcessor<Bitmap> createSubject() {        if (mPublishSubject != null)            return mPublishSubject;        mPublishSubject = PublishProcessor.create();        return mPublishSubject;    }    public static Disposable subscribe(Consumer<Bitmap> observer) {        if (mPublishSubject == null) {            createSubject();        }        return mPublishSubject.subscribeOn(Schedulers.io())                .observeOn(AndroidSchedulers.mainThread())                .subscribe(observer);    }    public static void next(Bitmap resule) {        if (mPublishSubject != null) {            mPublishSubject.onNext(resule);        }    }    public static void reset() {        if (mPublishSubject != null)            mPublishSubject.onComplete();        mPublishSubject = null;    }}