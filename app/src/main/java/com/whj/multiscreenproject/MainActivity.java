package com.whj.multiscreenproject;import android.Manifest;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.text.TextUtils;import android.view.View;import android.view.Menu;import android.view.MenuItem;import android.widget.Button;import android.widget.EditText;import com.tbruyelle.rxpermissions2.RxPermissions;import com.whj.multiscreenproject.screenop.RxScreenShot;import io.reactivex.functions.Consumer;public class MainActivity extends AppCompatActivity {    private EditText etIp,etPort;    private Button btnStart;    private String ip;    private String port;    private boolean isStarted;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        AppManager.getAppManager().addActivity(this);        afterView();        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        FloatingActionButton fab = findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {            }        });        etIp = findViewById(R.id.etIp);        etPort = findViewById(R.id.etPort);        btnStart = findViewById(R.id.btnStart);        ip = SharePrefUtil.getString(this,"ip","");        port = SharePrefUtil.getString(this,"port","");        etIp.setText(ip);        etPort.setText(port);        btnStart.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                 if(isStarted){                      RxScreenShot.stopScreenRecord(MainActivity.this);                      btnStart.setText("开始录屏");                 } else {                     ip = etIp.getText().toString();                     port = etPort.getText().toString();                     if(TextUtils.isEmpty(ip)){                         showSnackbar("输入ip");                         return;                     }                     if(TextUtils.isEmpty(port)){                         showSnackbar("输入端口号");                         return;                     }                     SharePrefUtil.saveString(MainActivity.this,"ip",ip);                     SharePrefUtil.saveString(MainActivity.this,"port",port);                     RxScreenShot.startScreenRecord(MainActivity.this);                     btnStart.setText("结束录屏");                 }                 isStarted = !isStarted;            }        });    }    public void afterView() {        RxPermissions permissions = new RxPermissions(this);        permissions.request(Manifest.permission.CAMERA                , Manifest.permission.WRITE_EXTERNAL_STORAGE                , Manifest.permission.RECORD_AUDIO                , Manifest.permission.ACCESS_WIFI_STATE                , Manifest.permission.CHANGE_WIFI_STATE                , Manifest.permission.CHANGE_NETWORK_STATE                , Manifest.permission.ACCESS_NETWORK_STATE                , Manifest.permission.READ_EXTERNAL_STORAGE                , Manifest.permission.VIBRATE                , Manifest.permission.ACCESS_FINE_LOCATION                , Manifest.permission.ACCESS_COARSE_LOCATION        )                .subscribe(new Consumer<Boolean>() {                    @Override                    public void accept(Boolean aBoolean) throws Exception {                        if (aBoolean) {                        } else {                        }                    }                });    }    private void showSnackbar(String tips){        Snackbar.make(etIp, tips, Snackbar.LENGTH_LONG)                .setAction("Action", null).show();    }    @Override    protected void onDestroy() {        super.onDestroy();        AppManager.getAppManager().finishActivity(this);    }}